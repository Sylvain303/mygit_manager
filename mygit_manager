#!/bin/bash
#
# Usage:
#  mygit_manager create REPO_NAME
#  mygit_manager list
#  mygit_manager rm REPO_NAME
#

VALID_REPONAME_REGEX='^[-a-zA-Z0-9_.]+$'
REPO_BASE_DIR=$HOME/repos/git
REPO_RW_URL=$USER@$(hostname --fqdn):$REPO_BASE_DIR

die() {
  echo "${0}:error: $*" >&2
  exit 1
}

check_repo_name() {
  local name="$1"
  if ! echo "$name" | egrep "$VALID_REPONAME_REGEX" > /dev/null ; then
    die "'$name' contains invalid characters for a repository name"
  fi
  case "$name" in
    .*)
      die "Repository name must not start with '.'"
      ;;
    *)
      ;;
  esac
}

action_add() {
  local repo_name="$1"
  if [[ -z "$repo_name" ]] ; then
    die "Missing REPO_NAME argument"
  fi
  check_repo_name $repo_name

  # Reload config to evaluate url options again with ${repo_name} set
  #load_config

  if [ -d $REPO_BASE_DIR/$repo_name ] ; then
    die "There is already a repository named \"$repo_name\""
  fi

  set -e
  mkdir $REPO_BASE_DIR/$repo_name
  cd $REPO_BASE_DIR/$repo_name
  git init --bare --quiet
  mv hooks/post-update.sample hooks/post-update
  set +e

  local repos_url=$REPO_RW_URL/$repo_name
  cat <<EOF
The "$REPO_NAME" repository has been created. You can clone it with:

  git clone $repos_url
  git clone $REPO_BASE_DIR/$repo_name

If you already have a local repository, you can push its content with:

  git remote add origin $repos_url
  git push -u origin master
EOF
}

# alias of add
action_create() {
  action_add "$@"
}

action_rm() {
  force=false
  if [[ "$1" == '-f' ]] ; then
    force=true
    shift
  fi

  local repo_name="$1"
  if [ -z "$repo_name" ] ; then
    die "Missing REPO_NAME argument"
  fi
  check_repo_name $repo_name

  local path=$REPO_BASE_DIR/$repo_name
  if [ ! -d "$path" ] ; then
    die "There is no repository named \"$repo_name\""
  fi
  
  if ! $force
  then
    echo -n "Delete the \"$repo_name\" repository? "
    read answer
  else
    answer=Y
  fi

  case "$answer" in
    y|Y)
      rm -rf "$path"
      ;;
    *)
      ;;
  esac
}

action_list() {
  cd $REPO_BASE_DIR && ls -1
}

action_init() {
  mkdir -p $REPO_BASE_DIR
}

################ main ######################

# auto detect action loop
action="$1"
shift
all_func=$(sed -n '/^action_/ s/() {// p' $(readlink -f $0))
found=0
for f in $all_func
do
  if [[ "action_$action" == $f ]]
  then
    # call the matching action with command line parameter
    eval "$f $@"
    found=1
    break
  fi
done

if [[ $found -eq 0 ]]
then
  echo "unknown action: '$action'"
  exit 1
fi

